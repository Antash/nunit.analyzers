# EditorConfig helps developers define and
# maintain consistent coding styles between
# different editors and IDEs

# http://EditorConfig.org

# top-most EditorConfig file
root = true

[*]
indent_style = space
indent_size = 4
insert_final_newline = true
charset = utf-8

[*.{proj,csproj,vcxproj,xproj,json,config,nuspec,xml}]
indent_size = 2

[*]
# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#namespace-class-structure-interface-enumeration-and-method-definitions
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#spaces
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#indentation
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#naming
# Always use "this." and "Me." when applicable; let StyleCop Analyzers provide the warning and fix
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_property = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_event = true:warning

dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_readonly_field = true:warning

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#use-of-the-var-keyword
# Unfortunately var_for_built_in_types conflicts with var_when_type_is_apparent. https://github.com/dotnet/roslyn/issues/23714
# Also 'apparent' does not mean the same for everyone.
# Disable diagnostics since no firm policy is in place yet and the messages hide other violations.
csharp_style_var_for_built_in_types = true:none
csharp_style_var_when_type_is_apparent = true:none
csharp_style_var_elsewhere = false:none

# Disabled rule as convention is not mentioned in https://docs.nunit.org/articles/developer-info/Coding-Standards.html
# Mentioned is 'if braces are not used on a control float statements with a single line, a blank line should follow'
# This is not something we can configure.
# The document doesn't say that it should have braces for multi-line statements, but maybe that is implied.
csharp_prefer_braces = when_multiline:warning

# Rules to match the actual code style used
csharp_prefer_simple_default_expression = false:suggestion
csharp_style_deconstructed_variable_declaration = false:suggestion
csharp_style_prefer_switch_expression = false:suggestion
csharp_style_expression_bodied_local_functions = false:suggestion
csharp_style_pattern_matching_over_as_with_null_check = false:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:none
dotnet_style_collection_initializer = true:none
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#file-organization
dotnet_sort_system_directives_first = true

# The first matching rule wins, more specific rules at the top

# dotnet_naming_rule.*.symbols does not yet support a comma-separated list https://github.com/dotnet/roslyn/issues/20891
# dotnet_naming_symbols.*.applicable_kinds does not yet support namespace, type_parameter or local https://github.com/dotnet/roslyn/issues/18121

dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_symbols.namespaces_types_and_non_field_members.applicable_kinds = namespace, class, struct, enum, interface, delegate, type_parameter, method, property, event
dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public
dotnet_naming_symbols.parameters_and_locals.applicable_kinds = parameter, local

dotnet_naming_rule.namespaces_types_and_non_field_members.severity = suggestion
dotnet_naming_rule.namespaces_types_and_non_field_members.symbols = namespaces_types_and_non_field_members
dotnet_naming_rule.namespaces_types_and_non_field_members.style = pascal_case
dotnet_naming_rule.public_fields.severity = suggestion
dotnet_naming_rule.public_fields.symbols = public_fields
dotnet_naming_rule.public_fields.style = pascal_case
dotnet_naming_rule.parameters_and_locals.severity = suggestion
dotnet_naming_rule.parameters_and_locals.symbols = parameters_and_locals
dotnet_naming_rule.parameters_and_locals.style = camel_case

